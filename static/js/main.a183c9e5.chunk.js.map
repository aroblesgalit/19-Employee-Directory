{"version":3,"sources":["components/Container.js","components/Navbar.js","components/Logo.js","components/NavbarRight.js","components/Sort.js","components/Filter.js","components/Table.js","components/TableHead.js","components/TableResults.js","components/EmployeeDirContainer.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","Navbar","uk-navbar","Logo","NavbarRight","Sort","id","onChange","handleSortChange","name","value","sortOption","Filter","handleFilterChange","filterOption","Table","TableHead","TableResults","console","log","results","map","employee","src","image","alt","email","phone","gender","location","EmployeeDirContainer","state","employees","event","target","setState","sort","a","b","femaleFilter","filter","maleFilter","this","React","Component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a183c9e5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container(props) {\r\n    return (\r\n        <div className=\"container uk-flex uk-flex-column uk-flex-middle\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"uk-navbar-container uk-margin uk-width-expand\" uk-navbar=\"true\">\r\n            {props.children}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"uk-navbar-left\">\r\n            <span className=\"uk-navbar-item uk-logo\">Employee Directory</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\n\r\nfunction NavbarRight(props) {\r\n    return (\r\n        <div className=\"uk-navbar-right\">\r\n            <div className=\"uk-flex uk-margin-right\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavbarRight;\r\n","import React from \"react\";\r\n\r\nfunction Sort(props) {\r\n    return (\r\n        <div className=\"uk-flex uk-flex-middle\">\r\n            <div className=\"uk-margin-small-right\">Sort: </div>\r\n            <select \r\n                className=\"uk-select uk-margin-right\" \r\n                id=\"sort\"\r\n                onChange={props.handleSortChange}\r\n                name=\"sortOption\"\r\n                value={props.sortOption}\r\n            >\r\n                <option value=\"id\">ID</option>\r\n                <option value=\"name\">Name</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sort;\r\n","import React from \"react\";\r\n\r\nfunction Filter(props) {\r\n    return (\r\n        <div className=\"uk-flex uk-flex-middle\">\r\n            <div className=\"uk-margin-small-right\">Filter: </div>\r\n            <select \r\n                className=\"uk-select\" \r\n                id=\"filter\"\r\n                onChange={props.handleFilterChange}\r\n                name=\"filterOption\"\r\n                value={props.filterOption}\r\n            >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nfunction Table(props) {\r\n    return (\r\n        <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle uk-table-responsive employee-table\">\r\n            {props.children}\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nfunction TableHead() {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th className=\"uk-table-shrink\">Picture</th>\r\n                <th className=\"uk-table-shrink\">ID</th>\r\n                <th className=\"uk-table-expand\">Name</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Gender</th>\r\n                <th>Location</th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TableHead;\r\n","import React from \"react\";\r\n\r\nfunction TableResults(props) {\r\n    console.log(props.results);\r\n    return (\r\n        <tbody>\r\n            {props.results.map(employee => (\r\n                <tr>\r\n                    <td><img src={employee.image} alt={employee.name} className=\"uk-border-circle\" /></td>\r\n                    <td>{employee.id}</td>\r\n                    <td>{employee.name}</td>\r\n                    <td>{employee.email}</td>\r\n                    <td>{employee.phone}</td>\r\n                    <td>{employee.gender}</td>\r\n                    <td>{employee.location}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n}\r\n\r\nexport default TableResults;\r\n","import React from \"react\";\r\nimport Container from \"./Container\";\r\nimport Navbar from \"./Navbar\";\r\nimport Logo from \"./Logo\";\r\nimport NavbarRight from \"./NavbarRight\";\r\nimport Sort from \"./Sort\";\r\nimport Filter from \"./Filter\";\r\nimport Table from \"./Table\";\r\nimport TableHead from \"./TableHead\";\r\nimport TableResults from \"./TableResults\";\r\n// import API from \"../utils/API\";\r\nimport employees from \"../employees.json\";\r\n\r\nclass EmployeeDirContainer extends React.Component {\r\n    state = {\r\n        results: employees,\r\n        sortOption: \"id\",\r\n        filterOption: \"all\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        // for (let i = 0; i < 10; i++) {\r\n        //     this.searchEmployee();\r\n        // }\r\n        this.setState({\r\n            results: employees,\r\n            sortOption: \"id\",\r\n            filterOption: \"all\"\r\n        })\r\n    };\r\n\r\n    // searchEmployee = () => {\r\n    //     API.search()\r\n    //         .then(res => {\r\n    //             const newResult = this.state.results.concat(res.data.results[0]);\r\n    //             this.setState({ results: newResult })\r\n    //         })\r\n    //         .catch(err => console.log(err));\r\n    // };\r\n\r\n    handleSortChange = (event) => {\r\n        const sortOption = event.target.value;\r\n        this.setState({ \r\n            sortOption: sortOption\r\n        });\r\n        if (sortOption === \"name\") {\r\n            this.setState({\r\n                results: this.state.results.sort((a, b) => a.name > b.name ? 1 : -1)\r\n            })\r\n        }\r\n        if (sortOption === \"id\") {\r\n            this.setState({\r\n                results: this.state.results.sort((a, b) => a.id > b.id ? 1 : -1)\r\n            })\r\n        }\r\n    };\r\n\r\n    handleFilterChange = (event) => {\r\n        const filterOption = event.target.value;\r\n        this.setState({\r\n            filterOption: filterOption\r\n        });\r\n        if (filterOption === \"all\") {\r\n            this.setState({\r\n                results: employees\r\n            })\r\n            return;\r\n        } else if (filterOption === \"male\") {\r\n            const maleFilter = employees.filter(employee => employee.gender === \"male\");\r\n            this.setState({\r\n                results: maleFilter\r\n            })\r\n            return;\r\n        } else if (filterOption === \"female\") {\r\n            const femaleFilter = employees.filter(employee => employee.gender === \"female\");\r\n            this.setState({\r\n                results: femaleFilter\r\n            })\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Navbar>\r\n                    <Logo />\r\n                    <NavbarRight>\r\n                        <Sort\r\n                            sortOption={this.state.sortOption}\r\n                            handleSortChange={this.handleSortChange}\r\n                        />\r\n                        <Filter \r\n                            filterOption={this.state.filterOption}\r\n                            handleFilterChange={this.handleFilterChange}\r\n                        />\r\n                    </NavbarRight>\r\n                </Navbar>\r\n                <Table>\r\n                    <TableHead />\r\n                    <TableResults results={this.state.results} />\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeDirContainer;","import React from 'react';\nimport EmployeeDirContainer from \"./components/EmployeeDirContainer\";\n\nfunction App() {\n  return <EmployeeDirContainer />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}